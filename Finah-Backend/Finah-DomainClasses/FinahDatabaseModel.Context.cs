//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Finah_DomainClasses
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Validation;
    using System.Text;
    
    public partial class db_projectEntities : DbContext
    {
        public db_projectEntities()
            : base("name=db_projectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<answer> answer { get; set; }
        public DbSet<answerlist> answerlist { get; set; }
        public DbSet<question> question { get; set; }
        public DbSet<questionlist> questionlist { get; set; }
        public DbSet<theme> theme { get; set; }
        public DbSet<user> user { get; set; }
        public DbSet<usertype> usertype { get; set; }

        public override int SaveChanges()
        {
            try
            {
                return base.SaveChanges();
            }
            catch (DbEntityValidationException ex)
            {
                var sb = new StringBuilder();

                foreach (var failure in ex.EntityValidationErrors)
                {
                    sb.AppendFormat("{0} failed validation\n", failure.Entry.Entity.GetType());
                    foreach (var error in failure.ValidationErrors)
                    {
                        sb.AppendFormat("- {0} : {1}", error.PropertyName, error.ErrorMessage);
                        sb.AppendLine();
                    }
                }

                throw new DbEntityValidationException(
                    "Entity Validation Failed - errors follow:\n" +
                    sb.ToString(), ex
                    ); // Add the original exception as the innerException
            }
            catch (DbUpdateException ex)
            {
                throw new DbUpdateException(
                    "Entity Validation Failed - errors follow:\n" +
                    ex.Message
                    ); // Add the original exception as the innerException
            }
        }
    }
}
